{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport Composer from 'react-composer';\nimport { Position } from '../helpers/Position.js';\nlet i, instanceRef;\nconst globalContext = /*#__PURE__*/React.createContext(null);\nconst parentMatrix = new THREE.Matrix4();\nconst instanceMatrix = new THREE.Matrix4();\nconst tempMatrix = new THREE.Matrix4();\nconst color = new THREE.Color();\nconst translation = new THREE.Vector3();\nconst rotation = new THREE.Quaternion();\nconst scale = new THREE.Vector3();\nconst Instance = /*#__PURE__*/React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nconst Instances = /*#__PURE__*/React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [[context, instance]] = React.useState(() => {\n    const c = /*#__PURE__*/React.createContext(null);\n\n    const i = props => /*#__PURE__*/React.createElement(Instance, _extends({\n      context: c\n    }, props));\n\n    return [c, i];\n  });\n  const parentRef = React.useRef(null);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n\n    for (i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useLayoutEffect(() => {\n    parentRef.current.count = parentRef.current.instanceMatrix.updateRange.count = parentRef.current.instanceColor.updateRange.count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n  }, [instances, range]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let count = 0;\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n\n      for (i = 0; i < instances.length; i++) {\n        instanceRef = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n\n        instanceRef.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n\n        if (!instanceMatrix.equals(tempMatrix.fromArray(matrices, i * 16))) {\n          instanceMatrix.toArray(matrices, i * 16);\n          parentRef.current.instanceMatrix.needsUpdate = true;\n        }\n\n        if (!instanceRef.color.equals(color.fromArray(colors, i * 3))) {\n          instanceRef.color.toArray(colors, i * 3);\n          parentRef.current.instanceColor.needsUpdate = true;\n        }\n      }\n\n      count++;\n    }\n  });\n  const events = React.useMemo(() => {\n    const events = {};\n\n    for (i = 0; i < instances.length; i++) {\n      var _instances$i$current;\n\n      Object.assign(events, (_instances$i$current = instances[i].current) == null ? void 0 : _instances$i$current.__r3f.handlers);\n    }\n\n    return Object.keys(events).reduce((prev, key) => ({ ...prev,\n      [key]: e => {\n        var _instances$e$instance, _instances$e$instance2, _instances$e$instance3;\n\n        return (_instances$e$instance = instances[e.instanceId].current) == null ? void 0 : (_instances$e$instance2 = _instances$e$instance.__r3f) == null ? void 0 : (_instances$e$instance3 = _instances$e$instance2.handlers) == null ? void 0 : _instances$e$instance3[key](e);\n      }\n    }), {});\n  }, [instances]);\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    args: [null, null, 0]\n  }, events, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\n\nfunction Merged({\n  meshes,\n  children,\n  ...props\n}) {\n  const isArray = Array.isArray(meshes);\n  return /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(({\n      geometry,\n      material\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\n      geometry: geometry,\n      material: material\n    }, props)))\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).reduce((acc, key, i) => ({ ...acc,\n    [key]: args[i]\n  }), {})));\n}\n\nexport { Instance, Instances, Merged };","map":{"version":3,"sources":["/Users/alisablakeney/coding/websites/longest-hum/client/node_modules/@react-three/drei/core/Instances.js"],"names":["_extends","THREE","React","extend","useFrame","mergeRefs","Composer","Position","i","instanceRef","globalContext","createContext","parentMatrix","Matrix4","instanceMatrix","tempMatrix","color","Color","translation","Vector3","rotation","Quaternion","scale","Instance","forwardRef","context","children","props","ref","useMemo","group","useRef","subscribe","useContext","useLayoutEffect","createElement","Instances","range","limit","frames","Infinity","instance","useState","c","parentRef","instances","setInstances","matrices","colors","mArray","Float32Array","identity","toArray","Array","map","current","count","updateRange","instanceColor","Math","min","undefined","length","useEffect","needsUpdate","state","updateMatrix","updateMatrixWorld","copy","matrixWorld","invert","decompose","compose","premultiply","equals","fromArray","events","_instances$i$current","Object","assign","__r3f","handlers","keys","reduce","prev","key","e","_instances$e$instance","_instances$e$instance2","_instances$e$instance3","instanceId","api","filter","item","matrixAutoUpdate","args","attach","array","itemSize","usage","DynamicDrawUsage","Provider","value","Merged","meshes","isArray","components","values","geometry","material","acc"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport Composer from 'react-composer';\nimport { Position } from '../helpers/Position.js';\n\nlet i, instanceRef;\nconst globalContext = /*#__PURE__*/React.createContext(null);\nconst parentMatrix = new THREE.Matrix4();\nconst instanceMatrix = new THREE.Matrix4();\nconst tempMatrix = new THREE.Matrix4();\nconst color = new THREE.Color();\nconst translation = new THREE.Vector3();\nconst rotation = new THREE.Quaternion();\nconst scale = new THREE.Vector3();\nconst Instance = /*#__PURE__*/React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nconst Instances = /*#__PURE__*/React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [[context, instance]] = React.useState(() => {\n    const c = /*#__PURE__*/React.createContext(null);\n\n    const i = props => /*#__PURE__*/React.createElement(Instance, _extends({\n      context: c\n    }, props));\n\n    return [c, i];\n  });\n  const parentRef = React.useRef(null);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n\n    for (i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useLayoutEffect(() => {\n    parentRef.current.count = parentRef.current.instanceMatrix.updateRange.count = parentRef.current.instanceColor.updateRange.count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n  }, [instances, range]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let count = 0;\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n\n      for (i = 0; i < instances.length; i++) {\n        instanceRef = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n\n        instanceRef.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n\n        if (!instanceMatrix.equals(tempMatrix.fromArray(matrices, i * 16))) {\n          instanceMatrix.toArray(matrices, i * 16);\n          parentRef.current.instanceMatrix.needsUpdate = true;\n        }\n\n        if (!instanceRef.color.equals(color.fromArray(colors, i * 3))) {\n          instanceRef.color.toArray(colors, i * 3);\n          parentRef.current.instanceColor.needsUpdate = true;\n        }\n      }\n\n      count++;\n    }\n  });\n  const events = React.useMemo(() => {\n    const events = {};\n\n    for (i = 0; i < instances.length; i++) {\n      var _instances$i$current;\n\n      Object.assign(events, (_instances$i$current = instances[i].current) == null ? void 0 : _instances$i$current.__r3f.handlers);\n    }\n\n    return Object.keys(events).reduce((prev, key) => ({ ...prev,\n      [key]: e => {\n        var _instances$e$instance, _instances$e$instance2, _instances$e$instance3;\n\n        return (_instances$e$instance = instances[e.instanceId].current) == null ? void 0 : (_instances$e$instance2 = _instances$e$instance.__r3f) == null ? void 0 : (_instances$e$instance3 = _instances$e$instance2.handlers) == null ? void 0 : _instances$e$instance3[key](e);\n      }\n    }), {});\n  }, [instances]);\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    args: [null, null, 0]\n  }, events, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\n\nfunction Merged({\n  meshes,\n  children,\n  ...props\n}) {\n  const isArray = Array.isArray(meshes);\n  return /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(({\n      geometry,\n      material\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\n      geometry: geometry,\n      material: material\n    }, props)))\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).reduce((acc, key, i) => ({ ...acc,\n    [key]: args[i]\n  }), {})));\n}\n\nexport { Instance, Instances, Merged };\n"]},"metadata":{},"sourceType":"module"}