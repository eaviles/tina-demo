{"ast":null,"code":"var _jsxFileName = \"/Users/alisablakeney/coding/websites/longest-hum/client/src/components/Wire.js\";\nimport { Tube } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Wire() {\n  class CustomSinCurve extends THREE.Curve {\n    constructor(scale = 1) {\n      super();\n      this.scale = scale;\n    }\n\n    getPoint(t, optionalTarget = new THREE.Vector3()) {\n      const tx = t * 3 - 1.5;\n      const ty = Math.sin(2 * Math.PI * t);\n      const tz = 0;\n      return optionalTarget.set(tx, ty, tz).multiplyScalar(this.scale);\n    }\n\n  }\n\n  const path = new CustomSinCurve(4);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tube, {\n        args: [path],\n        children: /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {\n          attach: \"material\",\n          color: \"#808080\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      args: [0x000000],\n      intensity: 0.1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      position: [0, 0, 5],\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = Wire;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wire\");","map":{"version":3,"sources":["/Users/alisablakeney/coding/websites/longest-hum/client/src/components/Wire.js"],"names":["Tube","THREE","Wire","CustomSinCurve","Curve","constructor","scale","getPoint","t","optionalTarget","Vector3","tx","ty","Math","sin","PI","tz","set","multiplyScalar","path"],"mappings":";AAAA,SAASA,IAAT,QAAqB,mBAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;AAGA,eAAe,SAASC,IAAT,GAAgB;AAE3B,QAAMC,cAAN,SAA6BF,KAAK,CAACG,KAAnC,CAAyC;AAErCC,IAAAA,WAAW,CAACC,KAAK,GAAG,CAAT,EAAY;AACnB;AACA,WAAKA,KAAL,GAAaA,KAAb;AACH;;AAEDC,IAAAA,QAAQ,CAACC,CAAD,EAAIC,cAAc,GAAG,IAAIR,KAAK,CAACS,OAAV,EAArB,EAA0C;AAE9C,YAAMC,EAAE,GAAGH,CAAC,GAAG,CAAJ,GAAQ,GAAnB;AACA,YAAMI,EAAE,GAAGC,IAAI,CAACC,GAAL,CAAS,IAAID,IAAI,CAACE,EAAT,GAAcP,CAAvB,CAAX;AACA,YAAMQ,EAAE,GAAG,CAAX;AAEA,aAAOP,cAAc,CAACQ,GAAf,CAAmBN,EAAnB,EAAuBC,EAAvB,EAA2BI,EAA3B,EAA+BE,cAA/B,CAA8C,KAAKZ,KAAnD,CAAP;AAEH;;AAfoC;;AAmBzC,QAAMa,IAAI,GAAG,IAAIhB,cAAJ,CAAmB,CAAnB,CAAb;AACA,sBACI;AAAA,4BACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE,CAACgB,IAAD,CAAZ;AAAA,+BACI;AAAmB,UAAA,MAAM,EAAC,UAA1B;AAAqC,UAAA,KAAK,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAc,MAAA,IAAI,EAAE,CAAC,QAAD,CAApB;AAAgC,MAAA,SAAS,EAAE;AAA3C;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AAAkB,MAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA5B;AAAuC,MAAA,SAAS,EAAE;AAAlD;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA,kBADJ;AAcH;KApCuBjB,I","sourcesContent":["import { Tube } from '@react-three/drei';\nimport * as THREE from 'three'\n\n\nexport default function Wire() {\n\n    class CustomSinCurve extends THREE.Curve {\n\n        constructor(scale = 1) {\n            super();\n            this.scale = scale;\n        }\n\n        getPoint(t, optionalTarget = new THREE.Vector3()) {\n\n            const tx = t * 3 - 1.5;\n            const ty = Math.sin(2 * Math.PI * t);\n            const tz = 0;\n\n            return optionalTarget.set(tx, ty, tz).multiplyScalar(this.scale);\n\n        }\n\n    }\n\n    const path = new CustomSinCurve(4);\n    return (\n        <>\n            <mesh>\n                <boxBufferGeometry />\n                <meshPhongMaterial />\n                <Tube args={[path]}>\n                    <meshPhongMaterial attach=\"material\" color=\"#808080\" />\n                </Tube>\n\n            </mesh>\n            <ambientLight args={[0x000000]} intensity={0.1} />\n            <directionalLight position={[0, 0, 5]} intensity={0.5} />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}